#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScreeningONE.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ScreeningONE")]
	public partial class BillingImportDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public BillingImportDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ScreeningONEConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BillingImportDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingImportDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingImportDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BillingImportDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_ClearTazworksImportTable")]
		public int S1_BillingImport_ClearTazworksImportTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UpdateTazworksImport")]
		public int S1_BillingImport_UpdateTazworksImport([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> importid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string productdesc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), importid, productdesc);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_GetImportErrorDescription")]
		public ISingleResult<S1_BillingImport_GetImportErrorDescriptionResult> S1_BillingImport_GetImportErrorDescription([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> importid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), importid);
			return ((ISingleResult<S1_BillingImport_GetImportErrorDescriptionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_InsertImportBatch")]
		public ISingleResult<S1_BillingImport_InsertImportBatchResult> S1_BillingImport_InsertImportBatch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VendorID", DbType="Int")] System.Nullable<int> vendorID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string importfilename)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendorID, username, importfilename);
			return ((ISingleResult<S1_BillingImport_InsertImportBatchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_ClearTUImportTable")]
		public int S1_BillingImport_ClearTUImportTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_GetImportAuditResults")]
		public ISingleResult<S1_BillingImport_GetImportAuditResultsResult> S1_BillingImport_GetImportAuditResults([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vendorid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendorid);
			return ((ISingleResult<S1_BillingImport_GetImportAuditResultsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_ClearXPImportTable")]
		public int S1_BillingImport_ClearXPImportTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UploadTransUnionData")]
		public int S1_BillingImport_UploadTransUnionData(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImportBatchID", DbType="Int")] System.Nullable<int> importBatchID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TUSubscriberID", DbType="VarChar(50)")] string tUSubscriberID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InquiryDate", DbType="DateTime")] System.Nullable<System.DateTime> inquiryDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InquiryTime", DbType="VarChar(6)")] string inquiryTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ECOA", DbType="VarChar(2)")] string eCOA, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Surname", DbType="VarChar(255)")] string surname, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="VarChar(255)")] string firstName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(MAX)")] string address, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(100)")] string city, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="State", DbType="VarChar(50)")] string state, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zip", DbType="VarChar(10)")] string zip, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SSN", DbType="VarChar(20)")] string sSN, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SpouseFirstName", DbType="VarChar(255)")] string spouseFirstName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NetPrice", DbType="Money")] System.Nullable<decimal> netPrice, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MMSSTo", DbType="VarChar(MAX)")] string mMSSTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeZone", DbType="VarChar(100)")] string timeZone, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCode", DbType="VarChar(7)")] string productCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductType", DbType="VarChar(1)")] System.Nullable<char> productType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Hit", DbType="VarChar(1)")] System.Nullable<char> hit, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserReference", DbType="VarChar(MAX)")] string userReference)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), importBatchID, tUSubscriberID, inquiryDate, inquiryTime, eCOA, surname, firstName, address, city, state, zip, sSN, spouseFirstName, netPrice, mMSSTo, timeZone, productCode, productType, hit, userReference);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_GetNewClientProducts")]
		public ISingleResult<S1_BillingImport_GetNewClientProductsResult> S1_BillingImport_GetNewClientProducts()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<S1_BillingImport_GetNewClientProductsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_InsertTazworks1SearchText")]
		public int S1_BillingImport_InsertTazworks1SearchText([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string productcode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string searchtext, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string matcherrorcode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> permanentsearchflag, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> importid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productcode, searchtext, matcherrorcode, permanentsearchflag, importid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_PreVerifyImport")]
		public ISingleResult<S1_BillingImport_PreVerifyImportResult> S1_BillingImport_PreVerifyImport([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vendorid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendorid);
			return ((ISingleResult<S1_BillingImport_PreVerifyImportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UploadTazworksData")]
		public int S1_BillingImport_UploadTazworksData(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VendorID", DbType="Int")] System.Nullable<int> vendorID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileNum", DbType="Int")] System.Nullable<int> fileNum, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientNumber", DbType="VarChar(50)")] string clientNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientName", DbType="VarChar(MAX)")] string clientName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesRep", DbType="VarChar(MAX)")] string salesRep, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LName", DbType="VarChar(MAX)")] string lName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FName", DbType="VarChar(MAX)")] string fName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MName", DbType="VarChar(MAX)")] string mName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SSN", DbType="VarChar(MAX)")] string sSN, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientNumberOrdered", DbType="VarChar(MAX)")] string clientNumberOrdered, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientNameOrdered", DbType="VarChar(MAX)")] string clientNameOrdered, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderBy", DbType="VarChar(MAX)")] string orderBy, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Reference", DbType="VarChar(MAX)")] string reference, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateOrdered", DbType="VarChar(MAX)")] string dateOrdered, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductName", DbType="VarChar(MAX)")] string productName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductType", DbType="VarChar(MAX)")] string productType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemCode", DbType="VarChar(MAX)")] string itemCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductDesc", DbType="VarChar(MAX)")] string productDesc, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Money")] System.Nullable<decimal> price, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoiceNumber", DbType="VarChar(MAX)")] string invoiceNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Jurisdiction", DbType="VarChar(MAX)")] string jurisdiction, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemDescription", DbType="VarChar(MAX)")] string itemDescription, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> importbatchid, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CoLName", DbType="VarChar(MAX)")] string coLName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CoFName", DbType="VarChar(MAX)")] string coFName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CoSSN", DbType="VarChar(MAX)")] string coSSN)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendorID, fileNum, clientNumber, clientName, salesRep, lName, fName, mName, sSN, clientNumberOrdered, clientNameOrdered, orderBy, reference, dateOrdered, productName, productType, itemCode, productDesc, price, invoiceNumber, jurisdiction, itemDescription, importbatchid, coLName, coFName, coSSN);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_ImportExperian")]
		public int S1_BillingImport_ImportExperian([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vendorid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendorid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_ImportTransUnion")]
		public int S1_BillingImport_ImportTransUnion([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vendorid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendorid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_ImportTazworks")]
		public int S1_BillingImport_ImportTazworks([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vendorid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendorid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_GetVendorProducts")]
		public ISingleResult<S1_BillingImport_GetVendorProductsResult> S1_BillingImport_GetVendorProducts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vendorid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> importid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendorid, importid);
			return ((ISingleResult<S1_BillingImport_GetVendorProductsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UpdateTUSurcharges")]
		public int S1_BillingImport_UpdateTUSurcharges()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UpdateXPSurcharges")]
		public int S1_BillingImport_UpdateXPSurcharges()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UpdateTaz1SoftwareFee")]
		public int S1_BillingImport_UpdateTaz1SoftwareFee()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UpdateTaz2SoftwareFee")]
		public int S1_BillingImport_UpdateTaz2SoftwareFee()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UpdateTaz1StateMVRAccessFees")]
		public int S1_BillingImport_UpdateTaz1StateMVRAccessFees()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UpdateTaz1StateMVRRecords")]
		public int S1_BillingImport_UpdateTaz1StateMVRRecords()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UploadQBBalanceSummaryData")]
		public int S1_BillingImport_UploadQBBalanceSummaryData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillAsClientName", DbType="VarChar(255)")] string billAsClientName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Money")] System.Nullable<decimal> amount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billAsClientName, amount);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_ClearQBBalanceSummaryTable")]
		public int S1_BillingImport_ClearQBBalanceSummaryTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_CleareDrugImportTable")]
		public int S1_BillingImport_CleareDrugImportTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UploadeDrugData")]
		public int S1_BillingImport_UploadeDrugData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImportBatchID", DbType="Int")] System.Nullable<int> importBatchID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerName", DbType="VarChar(MAX)")] string customerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerNumber", DbType="VarChar(MAX)")] string customerNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoiceNumber", DbType="VarChar(MAX)")] string invoiceNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationCode", DbType="VarChar(MAX)")] string locationCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceDate", DbType="DateTime")] System.Nullable<System.DateTime> serviceDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Product", DbType="VarChar(MAX)")] string product, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fee", DbType="Money")] System.Nullable<decimal> fee, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SSN", DbType="VarChar(MAX)")] string sSN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeName", DbType="VarChar(MAX)")] string employeeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="COCNumber", DbType="VarChar(MAX)")] string cOCNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SpecimenID", DbType="VarChar(MAX)")] string specimenID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Reason", DbType="VarChar(MAX)")] string reason, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comments", DbType="VarChar(MAX)")] string comments)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), importBatchID, customerName, customerNumber, invoiceNumber, locationCode, serviceDate, product, fee, sSN, employeeName, cOCNumber, specimenID, reason, comments);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_GetImportError")]
		public ISingleResult<S1_BillingImport_GetImportErrorResult> S1_BillingImport_GetImportError([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImportID", DbType="Int")] System.Nullable<int> importID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), importID);
			return ((ISingleResult<S1_BillingImport_GetImportErrorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_FixImportError")]
		public int S1_BillingImport_FixImportError([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImportID", DbType="Int")] System.Nullable<int> importID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductName", DbType="VarChar(MAX)")] string productName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductType", DbType="VarChar(MAX)")] string productType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemCode", DbType="VarChar(MAX)")] string itemCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string productDesc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), importID, productName, productType, itemCode, productDesc);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_ImporteDrug")]
		public int S1_BillingImport_ImporteDrug([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vendorid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vendorid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UpdateTemp")]
		public int S1_BillingImport_UpdateTemp([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EDrugTempLoaded", DbType="Bit")] System.Nullable<bool> eDrugTempLoaded, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExperianTempLoaded", DbType="Bit")] System.Nullable<bool> experianTempLoaded, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuickbooksTempLoaded", DbType="Bit")] System.Nullable<bool> quickbooksTempLoaded, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TazWorksTempLoaded", DbType="Bit")] System.Nullable<bool> tazWorksTempLoaded, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransUnionTempLoaded", DbType="Bit")] System.Nullable<bool> transUnionTempLoaded)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eDrugTempLoaded, experianTempLoaded, quickbooksTempLoaded, tazWorksTempLoaded, transUnionTempLoaded);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.S1_BillingImport_UploadExperianData")]
		public int S1_BillingImport_UploadExperianData(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImportBatchID", DbType="Int")] System.Nullable<int> importBatchID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPRequesterNo", DbType="VarChar(5)")] string xPRequesterNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPRecordType", DbType="Char(1)")] System.Nullable<char> xPRecordType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPMktPreamble", DbType="VarChar(4)")] string xPMktPreamble, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPAccPreamble", DbType="VarChar(4)")] string xPAccPreamble, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPSubcode", DbType="VarChar(7)")] string xPSubcode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPInquiryDate", DbType="DateTime")] System.Nullable<System.DateTime> xPInquiryDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPInquiryTime", DbType="VarChar(6)")] string xPInquiryTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPLastName", DbType="VarChar(255)")] string xPLastName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPSecondLastName", DbType="VarChar(255)")] string xPSecondLastName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPFirstName", DbType="VarChar(255)")] string xPFirstName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPMiddleName", DbType="VarChar(255)")] string xPMiddleName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPGenerationCode", DbType="Char(1)")] System.Nullable<char> xPGenerationCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPStreetNumber", DbType="VarChar(10)")] string xPStreetNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPStreetName", DbType="VarChar(32)")] string xPStreetName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPStreetSuffix", DbType="VarChar(4)")] string xPStreetSuffix, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPCity", DbType="VarChar(32)")] string xPCity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPUnitID", DbType="VarChar(32)")] string xPUnitID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPState", DbType="VarChar(2)")] string xPState, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPZipCode", DbType="VarChar(9)")] string xPZipCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPHitCode", DbType="VarChar(2)")] string xPHitCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPSSN", DbType="VarChar(9)")] string xPSSN, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPOperatorID", DbType="VarChar(2)")] string xPOperatorID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPDuplicateID", DbType="Char(1)")] System.Nullable<char> xPDuplicateID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPStatementID", DbType="VarChar(2)")] string xPStatementID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPInvoiceCodes", DbType="VarChar(3)")] string xPInvoiceCodes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPProductCode", DbType="VarChar(7)")] string xPProductCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPProductPrice", DbType="Money")] System.Nullable<decimal> xPProductPrice, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="XPMKeyWord", DbType="VarChar(20)")] string xPMKeyWord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), importBatchID, xPRequesterNo, xPRecordType, xPMktPreamble, xPAccPreamble, xPSubcode, xPInquiryDate, xPInquiryTime, xPLastName, xPSecondLastName, xPFirstName, xPMiddleName, xPGenerationCode, xPStreetNumber, xPStreetName, xPStreetSuffix, xPCity, xPUnitID, xPState, xPZipCode, xPHitCode, xPSSN, xPOperatorID, xPDuplicateID, xPStatementID, xPInvoiceCodes, xPProductCode, xPProductPrice, xPMKeyWord);
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class S1_BillingImport_GetImportErrorDescriptionResult
	{
		
		private string _ProductDesc;
		
		public S1_BillingImport_GetImportErrorDescriptionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDesc", DbType="VarChar(MAX)")]
		public string ProductDesc
		{
			get
			{
				return this._ProductDesc;
			}
			set
			{
				if ((this._ProductDesc != value))
				{
					this._ProductDesc = value;
				}
			}
		}
	}
	
	public partial class S1_BillingImport_InsertImportBatchResult
	{
		
		private System.Nullable<int> _ImportBatchID;
		
		private System.Nullable<int> _ErrorCode;
		
		public S1_BillingImport_InsertImportBatchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportBatchID", DbType="Int")]
		public System.Nullable<int> ImportBatchID
		{
			get
			{
				return this._ImportBatchID;
			}
			set
			{
				if ((this._ImportBatchID != value))
				{
					this._ImportBatchID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorCode", DbType="Int")]
		public System.Nullable<int> ErrorCode
		{
			get
			{
				return this._ErrorCode;
			}
			set
			{
				if ((this._ErrorCode != value))
				{
					this._ErrorCode = value;
				}
			}
		}
	}
	
	public partial class S1_BillingImport_GetImportAuditResultsResult
	{
		
		private System.Nullable<int> _TotalRecordCount;
		
		private System.Nullable<decimal> _TotalPrice;
		
		public S1_BillingImport_GetImportAuditResultsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRecordCount", DbType="Int")]
		public System.Nullable<int> TotalRecordCount
		{
			get
			{
				return this._TotalRecordCount;
			}
			set
			{
				if ((this._TotalRecordCount != value))
				{
					this._TotalRecordCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
	}
	
	public partial class S1_BillingImport_GetNewClientProductsResult
	{
		
		private int _ClientID;
		
		private string _ClientName;
		
		private int _ProductID;
		
		private string _ProductName;
		
		private string _ProductCode;
		
		public S1_BillingImport_GetNewClientProductsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this._ClientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
	}
	
	public partial class S1_BillingImport_PreVerifyImportResult
	{
		
		private System.Nullable<int> _ImportID;
		
		private System.Nullable<int> _ErrorCode;
		
		private string _ErrorMsg;
		
		private System.Nullable<int> _LineNumber;
		
		private System.Nullable<int> _FileNum;
		
		private string _ErrorDetail;
		
		public S1_BillingImport_PreVerifyImportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportID", DbType="Int")]
		public System.Nullable<int> ImportID
		{
			get
			{
				return this._ImportID;
			}
			set
			{
				if ((this._ImportID != value))
				{
					this._ImportID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorCode", DbType="Int")]
		public System.Nullable<int> ErrorCode
		{
			get
			{
				return this._ErrorCode;
			}
			set
			{
				if ((this._ErrorCode != value))
				{
					this._ErrorCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMsg", DbType="VarChar(40)")]
		public string ErrorMsg
		{
			get
			{
				return this._ErrorMsg;
			}
			set
			{
				if ((this._ErrorMsg != value))
				{
					this._ErrorMsg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int")]
		public System.Nullable<int> LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this._LineNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileNum", DbType="Int")]
		public System.Nullable<int> FileNum
		{
			get
			{
				return this._FileNum;
			}
			set
			{
				if ((this._FileNum != value))
				{
					this._FileNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorDetail", DbType="VarChar(MAX)")]
		public string ErrorDetail
		{
			get
			{
				return this._ErrorDetail;
			}
			set
			{
				if ((this._ErrorDetail != value))
				{
					this._ErrorDetail = value;
				}
			}
		}
	}
	
	public partial class S1_BillingImport_GetVendorProductsResult
	{
		
		private string _ProductCode;
		
		private string _ProductName;
		
		public S1_BillingImport_GetVendorProductsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(308) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
	}
	
	public partial class S1_BillingImport_GetImportErrorResult
	{
		
		private string _ProductName;
		
		private string _ProductType;
		
		private string _ItemCode;
		
		private string _ProductDesc;
		
		public S1_BillingImport_GetImportErrorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductType", DbType="VarChar(MAX)")]
		public string ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this._ProductType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="VarChar(MAX)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this._ItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDesc", DbType="VarChar(MAX)")]
		public string ProductDesc
		{
			get
			{
				return this._ProductDesc;
			}
			set
			{
				if ((this._ProductDesc != value))
				{
					this._ProductDesc = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
